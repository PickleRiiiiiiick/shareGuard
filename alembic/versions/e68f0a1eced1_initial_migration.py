"""initial migration

Revision ID: e68f0a1eced1
Revises: 
Create Date: 2024-11-16 07:08:52.374005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e68f0a1eced1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scan_targets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('scan_frequency', sa.String(), nullable=False),
    sa.Column('max_depth', sa.Integer(), nullable=True),
    sa.Column('exclude_patterns', sa.JSON(), nullable=True),
    sa.Column('last_scan_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scan_target_path', 'scan_targets', ['path'], unique=False)
    op.create_table('user_group_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=255), nullable=True),
    sa.Column('user_domain', sa.String(length=255), nullable=True),
    sa.Column('user_sid', sa.String(length=255), nullable=True),
    sa.Column('group_name', sa.String(length=255), nullable=True),
    sa.Column('group_domain', sa.String(length=255), nullable=True),
    sa.Column('group_sid', sa.String(length=255), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_group_lookup', 'user_group_mappings', ['group_name', 'group_domain'], unique=False)
    op.create_index('idx_sid_lookup', 'user_group_mappings', ['user_sid', 'group_sid'], unique=False)
    op.create_index('idx_user_lookup', 'user_group_mappings', ['user_name', 'user_domain'], unique=False)
    op.create_table('alert_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('alert_type', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('notifications', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['target_id'], ['scan_targets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('scan_type', sa.String(length=50), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('baseline_job_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['baseline_job_id'], ['scan_jobs.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['scan_targets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(length=255), nullable=True),
    sa.Column('scan_time', sa.DateTime(), nullable=True),
    sa.Column('owner', sa.JSON(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('hash', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['scan_jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scan_result_hash', 'scan_results', ['hash'], unique=False)
    op.create_index('idx_scan_result_path', 'scan_results', ['path'], unique=False)
    op.create_table('access_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_result_id', sa.Integer(), nullable=True),
    sa.Column('trustee_name', sa.String(length=255), nullable=True),
    sa.Column('trustee_domain', sa.String(length=255), nullable=True),
    sa.Column('trustee_sid', sa.String(length=255), nullable=True),
    sa.Column('access_type', sa.String(length=50), nullable=True),
    sa.Column('inherited', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['scan_result_id'], ['scan_results.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_access_entry_sid', 'access_entries', ['trustee_sid'], unique=False)
    op.create_index('idx_access_entry_trustee', 'access_entries', ['trustee_name', 'trustee_domain'], unique=False)
    op.create_table('permission_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_job_id', sa.Integer(), nullable=True),
    sa.Column('access_entry_id', sa.Integer(), nullable=True),
    sa.Column('change_type', sa.String(length=50), nullable=True),
    sa.Column('previous_state', sa.JSON(), nullable=True),
    sa.Column('current_state', sa.JSON(), nullable=True),
    sa.Column('detected_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['access_entry_id'], ['access_entries.id'], ),
    sa.ForeignKeyConstraint(['scan_job_id'], ['scan_jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_permission_change_time', 'permission_changes', ['detected_time'], unique=False)
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=True),
    sa.Column('scan_job_id', sa.Integer(), nullable=True),
    sa.Column('permission_change_id', sa.Integer(), nullable=True),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['alert_configurations.id'], ),
    sa.ForeignKeyConstraint(['permission_change_id'], ['permission_changes.id'], ),
    sa.ForeignKeyConstraint(['scan_job_id'], ['scan_jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alerts')
    op.drop_index('idx_permission_change_time', table_name='permission_changes')
    op.drop_table('permission_changes')
    op.drop_index('idx_access_entry_trustee', table_name='access_entries')
    op.drop_index('idx_access_entry_sid', table_name='access_entries')
    op.drop_table('access_entries')
    op.drop_index('idx_scan_result_path', table_name='scan_results')
    op.drop_index('idx_scan_result_hash', table_name='scan_results')
    op.drop_table('scan_results')
    op.drop_table('scan_jobs')
    op.drop_table('alert_configurations')
    op.drop_index('idx_user_lookup', table_name='user_group_mappings')
    op.drop_index('idx_sid_lookup', table_name='user_group_mappings')
    op.drop_index('idx_group_lookup', table_name='user_group_mappings')
    op.drop_table('user_group_mappings')
    op.drop_index('idx_scan_target_path', table_name='scan_targets')
    op.drop_table('scan_targets')
    # ### end Alembic commands ###
